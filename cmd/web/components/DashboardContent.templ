package components

import (
	"database/sql"
	"fmt"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/separator"
	"github.com/jp-roisin/catch-and-go/internal/externalapi"
)

type PassingTime struct {
	LineCode            string
	Color               sql.NullString
	TextColor           string
	Mode                sql.NullString
	Destination         externalapi.I18n
	ExpectedArrivalTime int
}

type DashboardContentProps struct {
	PassingTimes []PassingTime
	Locale       string
}

templ DashboardContent(props DashboardContentProps) {
	<ul>
		for i, pt := range props.PassingTimes {
			<li class="my-4">
				<div class="flex justify-between my-4">
					<div class="flex gap-4 items-center">
						@LineMode(pt.Mode)
						<span
							class="size-[32px] rounded grid place-items-center font-semibold"
							style={ fmt.Sprintf(
                "background-color:%s; color:%s",
                func() string {
                  if pt.Color.Valid {
                    return pt.Color.String
                  }
                  return "#ccc"
                }(),
                pt.TextColor,
              ) }
						>
							{ pt.LineCode }
						</span>
						<span>
							if props.Locale == "fr" {
								{ pt.Destination.FR }
							} else {
								{ pt.Destination.NL }
							}
						</span>
					</div>
					@MinutesUntil(pt.ExpectedArrivalTime)
				</div>
				if (len(props.PassingTimes) != i + 1) {
					@separator.Separator()
				}
			</li>
		}
	</ul>
}
