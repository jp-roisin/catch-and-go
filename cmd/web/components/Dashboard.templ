package components

import (
	"fmt"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/button"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/card"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/icon"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/separator"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/skeleton"
	"github.com/jp-roisin/catch-and-go/internal/database/store"
)

templ Dashboard(dashbords []store.ListDashboardsFromSessionRow) {
	for _, d := range dashbords {
		@card.Card(card.Props{
			ID:    fmt.Sprintf("dashboard_%d", d.DashboardID),
			Class: "aspect-video flex flex-col",
		}) {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between"}) {
        <span class="flex gap-2 items-center">
        @icon.MapPin()
				@card.Title() {
					{ d.StopName }
				}
        </span>
				@button.Button(button.Props{Variant: button.VariantGhost,
					Attributes: templ.Attributes{
						"hx-delete":  fmt.Sprintf("/dashboards/%d", d.DashboardID),
						"hx-trigger": "click",
						"hx-swap":    "outerHTML",
						"hx-target":  fmt.Sprintf("#dashboard_%d", d.DashboardID),
					},
				}) {
					@icon.X()
				}
			}
			@card.Content(card.ContentProps{
				Class: "flex-1 overflow-y-auto",
				Attributes: templ.Attributes{
					"hx-get":       fmt.Sprintf("/dashboards/%d", d.DashboardID),
					"hx-trigger":   "load, every 60s",
					"hx-swap":      "innerHTML",
					"hx-indicator": "#content-skeleton",
				}}) {
				@DashboarContentSkeleton(4)
			}
		}
	}
}

templ DashboarContentSkeleton(count int) {
	<ul id="content-skeleton" class="htmx-indicator">
		for range count - 1 {
			<li>
				@skeleton.Skeleton(skeleton.Props{Class: "h-8 w-full my-4"})
				@separator.Separator()
			</li>
		}
		<li>
			@skeleton.Skeleton(skeleton.Props{Class: "h-8 w-full my-4"})
		</li>
	</ul>
}
