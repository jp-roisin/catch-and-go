package components

import (
	"fmt"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/button"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/card"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/icon"
	"github.com/jp-roisin/catch-and-go/cmd/web/ui/separator"
	"github.com/jp-roisin/catch-and-go/internal/database/store"
	"github.com/jp-roisin/catch-and-go/internal/externalapi"
)

templ Dashboard(dashbords []store.ListDashboardsFromSessionRow) {
	for _, d := range dashbords {
		@card.Card(card.Props{
			ID:    fmt.Sprintf("dashboard_%d", d.DashboardID),
			Class: "aspect-video flex flex-col",
		}) {
			@card.Header(card.HeaderProps{Class: "flex flex-row items-center justify-between"}) {
				@card.Title() {
					{ d.StopName }
				}
				@button.Button(button.Props{Variant: button.VariantGhost,
					Attributes: templ.Attributes{
						"hx-delete":  fmt.Sprintf("/dashboards/%d", d.DashboardID),
						"hx-trigger": "click",
						"hx-swap":    "outerHTML",
						"hx-target":  fmt.Sprintf("#dashboard_%d", d.DashboardID),
					},
				}) {
					@icon.X()
				}
			}
			@card.Content(card.ContentProps{
				Attributes: templ.Attributes{
					"hx-get":     fmt.Sprintf("/dashboards/%d", d.DashboardID),
					"hx-trigger": "load",
				}})
		}
	}
}

templ DashboardContent(waitingTimes []externalapi.WaitingTime, line store.Line) {
	<ul>
		for _, wt := range waitingTimes {
			for i, t := range wt.PassingTimes {
				<li class="my-4">
					<div class="flex justify-between my-4">
						<div class="flex gap-4 items-center">
							if line.Mode.Valid {
								<span>
									{ line.Mode.String }
								</span>
							}
							<span
								class="text-white size-[32px] rounded grid place-items-center font-semibold"
								style={ fmt.Sprintf("background-color:%s", line.Color.String) }
							>
								{ t.LineID }
							</span>
							<span>
								{ t.Destination.FR }
							</span>
						</div>
						<div>
							{ t.ExpectedArrivalTime }
						</div>
					</div>
					if len(wt.PassingTimes) != i + 1 {
						@separator.Separator()
					}
				</li>
			}
		}
	</ul>
}
