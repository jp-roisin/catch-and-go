// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: stops_by_lines.sql

package store

import (
	"context"
)

const listStopsFromLine = `-- name: ListStopsFromLine :many
SELECT s.id, s.code, s.geo, s.name, s.created_at
FROM stops_by_lines sbl
JOIN stops s ON s.id = sbl.stop_id
WHERE sbl.line_id = ?
ORDER BY sbl."order" ASC
`

func (q *Queries) ListStopsFromLine(ctx context.Context, lineID int64) ([]Stop, error) {
	rows, err := q.db.QueryContext(ctx, listStopsFromLine, lineID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Stop
	for rows.Next() {
		var i Stop
		if err := rows.Scan(
			&i.ID,
			&i.Code,
			&i.Geo,
			&i.Name,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
